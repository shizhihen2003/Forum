<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.edu.ujn.Forum.dao.NotificationMapper">
  <!-- 基础结果映射 -->
  <resultMap id="BaseResultMap" type="cn.edu.ujn.Forum.dao.Notification">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="type" jdbcType="CHAR" property="type" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="is_read" jdbcType="BIT" property="isRead" />
    <result column="created_at" jdbcType="TIMESTAMP" property="createdAt" />
    <result column="content" jdbcType="VARCHAR" property="content" />
  </resultMap>

  <!-- 基础列 -->
  <sql id="Base_Column_List">
    id, user_id, type, title, is_read, created_at, content
  </sql>

  <!-- 根据ID查询 -->
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from notifications
    where id = #{id,jdbcType=BIGINT}
  </select>

  <!-- 根据用户ID查询所有通知 -->
  <select id="selectByUserId" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from notifications
    where user_id = #{userId,jdbcType=BIGINT}
    order by created_at desc
  </select>

  <!-- 统计用户未读通知数 -->
  <select id="countUnreadByUserId" parameterType="java.lang.Long" resultType="java.lang.Integer">
    select count(*)
    from notifications
    where user_id = #{userId,jdbcType=BIGINT}
      and is_read = false
  </select>

  <!-- 根据条件查询 -->
  <select id="selectByCondition" parameterType="cn.edu.ujn.Forum.dao.Notification" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from notifications
    <where>
      <if test="userId != null">
        and user_id = #{userId,jdbcType=BIGINT}
      </if>
      <if test="type != null">
        and type = #{type,jdbcType=CHAR}
      </if>
      <if test="isRead != null">
        and is_read = #{isRead,jdbcType=BIT}
      </if>
    </where>
    order by created_at desc
  </select>

  <!-- 删除通知 -->
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from notifications
    where id = #{id,jdbcType=BIGINT}
  </delete>

  <!-- 删除用户所有通知 -->
  <delete id="deleteByUserId" parameterType="java.lang.Long">
    delete from notifications
    where user_id = #{userId,jdbcType=BIGINT}
  </delete>

  <!-- 插入通知 -->
  <insert id="insert" parameterType="cn.edu.ujn.Forum.dao.Notification" useGeneratedKeys="true" keyProperty="id">
    insert into notifications (
      user_id, type, title,
      is_read, created_at, content
    )
    values (
             #{userId,jdbcType=BIGINT}, #{type,jdbcType=CHAR}, #{title,jdbcType=VARCHAR},
             #{isRead,jdbcType=BIT}, #{createdAt,jdbcType=TIMESTAMP}, #{content,jdbcType=VARCHAR}
           )
  </insert>

  <!-- 更新通知 -->
  <update id="updateByPrimaryKeySelective" parameterType="cn.edu.ujn.Forum.dao.Notification">
    update notifications
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=CHAR},
      </if>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="isRead != null">
        is_read = #{isRead,jdbcType=BIT},
      </if>
      <if test="createdAt != null">
        created_at = #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>

  <!-- 更新通知全部字段 -->
  <update id="updateByPrimaryKey" parameterType="cn.edu.ujn.Forum.dao.Notification">
    update notifications
    set user_id = #{userId,jdbcType=BIGINT},
        type = #{type,jdbcType=CHAR},
        title = #{title,jdbcType=VARCHAR},
        is_read = #{isRead,jdbcType=BIT},
        created_at = #{createdAt,jdbcType=TIMESTAMP},
        content = #{content,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <!-- 标记所有通知为已读 -->
  <update id="markAllAsRead" parameterType="java.lang.Long">
    update notifications
    set is_read = true
    where user_id = #{userId,jdbcType=BIGINT}
      and is_read = false
  </update>
</mapper>