<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.edu.ujn.Forum.dao.CommentMapper">
  <!-- 基础字段映射 -->
  <resultMap id="BaseResultMap" type="cn.edu.ujn.Forum.dao.Comment">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="post_id" jdbcType="BIGINT" property="postId" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="parent_id" jdbcType="BIGINT" property="parentId" />
    <result column="like_count" jdbcType="INTEGER" property="likeCount" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
  </resultMap>

  <!-- 带用户信息的评论映射 -->
  <resultMap id="CommentWithUserMap" type="cn.edu.ujn.Forum.dao.Comment" extends="BaseResultMap">
    <association property="author" javaType="cn.edu.ujn.Forum.dao.User">
      <id column="user_id" property="id"/>
      <result column="username" property="username"/>
      <association property="profile" javaType="cn.edu.ujn.Forum.dao.UserProfile">
        <result column="author_avatar" property="avatar"/>
        <result column="author_nickname" property="nickname"/>
      </association>
    </association>
    <collection property="children" column="id" select="selectByParentId"/>
  </resultMap>

  <!-- 基础列 -->
  <sql id="Base_Column_List">
    id, post_id, user_id, parent_id, like_count, status, create_time, update_time, content
  </sql>

  <!-- 查询单条记录 -->
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="CommentWithUserMap">
    SELECT
      c.*,
      u.username,
      up.avatar as author_avatar,
      up.nickname as author_nickname
    FROM comment c
           LEFT JOIN user u ON c.user_id = u.id
           LEFT JOIN user_profile up ON u.id = up.user_id
    WHERE c.id = #{id}
  </select>

  <!-- 获取帖子的评论列表 -->
  <select id="getPostComments" parameterType="java.lang.Long" resultMap="CommentWithUserMap">
    SELECT
      c.*,
      u.username,
      up.avatar as author_avatar,
      up.nickname as author_nickname
    FROM comment c
           LEFT JOIN user u ON c.user_id = u.id
           LEFT JOIN user_profile up ON u.id = up.user_id
    WHERE c.post_id = #{postId}
      AND c.parent_id IS NULL
      AND c.status = 1
    ORDER BY c.create_time DESC
  </select>

  <!-- 根据父评论ID查询回复列表 -->
  <select id="selectByParentId" resultMap="CommentWithUserMap">
    SELECT
      c.*,
      u.username,
      up.avatar as author_avatar,
      up.nickname as author_nickname
    FROM comment c
           LEFT JOIN user u ON c.user_id = u.id
           LEFT JOIN user_profile up ON u.id = up.user_id
    WHERE c.parent_id = #{parentId}
      AND c.status = 1
    ORDER BY c.create_time ASC
  </select>

  <!-- 根据帖子ID查询评论 -->
  <select id="selectByPostId" parameterType="java.lang.Long" resultMap="CommentWithUserMap">
    SELECT
      c.*,
      u.username,
      up.avatar as author_avatar,
      up.nickname as author_nickname
    FROM comment c
           LEFT JOIN user u ON c.user_id = u.id
           LEFT JOIN user_profile up ON u.id = up.user_id
    WHERE c.post_id = #{postId}
      AND c.parent_id IS NULL
      AND c.status = 1
    ORDER BY c.create_time DESC
  </select>

  <!-- 根据评论ID批量查询 -->
  <select id="selectByIds" resultMap="CommentWithUserMap">
    SELECT
    c.*,
    u.username,
    up.avatar as author_avatar,
    up.nickname as author_nickname
    FROM comment c
    LEFT JOIN user u ON c.user_id = u.id
    LEFT JOIN user_profile up ON u.id = up.user_id
    WHERE c.id IN
    <foreach collection="ids" item="id" open="(" separator="," close=")">
      #{id}
    </foreach>
  </select>

  <!-- 删除评论 -->
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from comment
    where id = #{id}
  </delete>

  <!-- 插入评论 -->
  <insert id="insert" parameterType="cn.edu.ujn.Forum.dao.Comment">
    insert into comment (
      post_id, user_id, parent_id, content,
      like_count, status, create_time, update_time
    )
    values (
             #{postId}, #{userId}, #{parentId}, #{content},
             #{likeCount}, #{status}, #{createTime}, #{updateTime}
           )
  </insert>

  <!-- 更新评论 -->
  <update id="updateByPrimaryKeySelective" parameterType="cn.edu.ujn.Forum.dao.Comment">
    update comment
    <set>
      <if test="content != null">content = #{content},</if>
      <if test="status != null">status = #{status},</if>
      <if test="likeCount != null">like_count = #{likeCount},</if>
      update_time = NOW()
    </set>
    where id = #{id}
  </update>

  <!-- 更新评论状态 -->
  <update id="updateStatus">
    UPDATE comment
    SET status = #{status},
        update_time = NOW()
    WHERE id = #{id}
  </update>

  <!-- 更新点赞次数 -->
  <update id="updateLikeCount">
    UPDATE comment
    SET like_count = like_count + #{delta}
    WHERE id = #{id}
  </update>

  <!-- 根据帖子ID删除评论 -->
  <delete id="deleteByPostId">
    DELETE FROM comment
    WHERE post_id = #{postId}
  </delete>
</mapper>