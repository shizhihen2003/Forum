<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.edu.ujn.Forum.dao.CommentMapper">
  <!-- 基础字段映射 -->
  <resultMap id="BaseResultMap" type="cn.edu.ujn.Forum.dao.Comment">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="post_id" jdbcType="BIGINT" property="postId" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="parent_id" jdbcType="BIGINT" property="parentId" />
    <result column="like_count" jdbcType="INTEGER" property="likeCount" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>

  <!-- 带BLOB字段的结果映射 -->
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="cn.edu.ujn.Forum.dao.Comment">
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
  </resultMap>

  <!-- 带用户信息的结果映射 -->
  <resultMap extends="ResultMapWithBLOBs" id="ResultMapWithUser" type="cn.edu.ujn.Forum.dao.Comment">
    <result column="author_name" property="authorName" />
    <result column="author_avatar" property="authorAvatar" />
  </resultMap>

  <!-- 基础列 -->
  <sql id="Base_Column_List">
    id, post_id, user_id, parent_id, like_count, status, create_time, update_time
  </sql>

  <!-- BLOB列 -->
  <sql id="Blob_Column_List">
    content
  </sql>

  <!-- 查询单条记录 -->
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithUser">
    SELECT
      c.*,
      u.username as author_name,
      u.avatar as author_avatar
    FROM comment c
           LEFT JOIN user u ON c.user_id = u.id
    WHERE c.id = #{id,jdbcType=BIGINT}
  </select>

  <!-- 根据帖子ID查询评论 -->
  <select id="selectByPostId" parameterType="java.lang.Long" resultMap="ResultMapWithUser">
    SELECT
      c.*,
      u.username as author_name,
      u.avatar as author_avatar
    FROM comment c
           LEFT JOIN user u ON c.user_id = u.id
    WHERE c.post_id = #{postId,jdbcType=BIGINT}
      AND c.parent_id IS NULL
      AND c.status = 1
    ORDER BY c.create_time DESC
  </select>

  <!-- 根据父评论ID查询评论 -->
  <select id="selectByParentId" parameterType="java.lang.Long" resultMap="ResultMapWithUser">
    SELECT
      c.*,
      u.username as author_name,
      u.avatar as author_avatar
    FROM comment c
           LEFT JOIN user u ON c.user_id = u.id
    WHERE c.parent_id = #{parentId,jdbcType=BIGINT}
      AND c.status = 1
    ORDER BY c.create_time ASC
  </select>

  <!-- 根据评论ID批量查询 -->
  <select id="selectByIds" resultMap="ResultMapWithUser">
    SELECT
    c.*,
    u.username as author_name,
    u.avatar as author_avatar
    FROM comment c
    LEFT JOIN user u ON c.user_id = u.id
    WHERE c.id IN
    <foreach collection="ids" item="id" open="(" separator="," close=")">
      #{id}
    </foreach>
  </select>

  <!-- 删除评论 -->
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from comment
    where id = #{id,jdbcType=BIGINT}
  </delete>

  <!-- 插入评论(全字段) -->
  <insert id="insert" parameterType="cn.edu.ujn.Forum.dao.Comment">
    insert into comment (id, post_id, user_id,
                         parent_id, like_count, status,
                         create_time, update_time, content
    )
    values (#{id,jdbcType=BIGINT}, #{postId,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT},
            #{parentId,jdbcType=BIGINT}, #{likeCount,jdbcType=INTEGER}, #{status,jdbcType=TINYINT},
            #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{content,jdbcType=LONGVARCHAR}
           )
  </insert>

  <!-- 插入评论(动态字段) -->
  <insert id="insertSelective" parameterType="cn.edu.ujn.Forum.dao.Comment">
    insert into comment
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="postId != null">
        post_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="parentId != null">
        parent_id,
      </if>
      <if test="likeCount != null">
        like_count,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="content != null">
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="postId != null">
        #{postId,jdbcType=BIGINT},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="parentId != null">
        #{parentId,jdbcType=BIGINT},
      </if>
      <if test="likeCount != null">
        #{likeCount,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>

  <!-- 更新评论(动态字段) -->
  <update id="updateByPrimaryKeySelective" parameterType="cn.edu.ujn.Forum.dao.Comment">
    update comment
    <set>
      <if test="postId != null">
        post_id = #{postId,jdbcType=BIGINT},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="parentId != null">
        parent_id = #{parentId,jdbcType=BIGINT},
      </if>
      <if test="likeCount != null">
        like_count = #{likeCount,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>

  <!-- 更新评论(带BLOB字段) -->
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="cn.edu.ujn.Forum.dao.Comment">
    update comment
    set post_id = #{postId,jdbcType=BIGINT},
        user_id = #{userId,jdbcType=BIGINT},
        parent_id = #{parentId,jdbcType=BIGINT},
        like_count = #{likeCount,jdbcType=INTEGER},
        status = #{status,jdbcType=TINYINT},
        create_time = #{createTime,jdbcType=TIMESTAMP},
        update_time = #{updateTime,jdbcType=TIMESTAMP},
        content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <!-- 更新评论(不带BLOB字段) -->
  <update id="updateByPrimaryKey" parameterType="cn.edu.ujn.Forum.dao.Comment">
    update comment
    set post_id = #{postId,jdbcType=BIGINT},
        user_id = #{userId,jdbcType=BIGINT},
        parent_id = #{parentId,jdbcType=BIGINT},
        like_count = #{likeCount,jdbcType=INTEGER},
        status = #{status,jdbcType=TINYINT},
        create_time = #{createTime,jdbcType=TIMESTAMP},
        update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <!-- 更新评论状态 -->
  <update id="updateStatus">
    UPDATE comment
    SET status = #{status,jdbcType=TINYINT},
        update_time = NOW()
    WHERE id = #{id,jdbcType=BIGINT}
  </update>

  <!-- 更新点赞次数 -->
  <update id="updateLikeCount">
    UPDATE comment
    SET like_count = like_count + #{delta,jdbcType=INTEGER}
    WHERE id = #{id,jdbcType=BIGINT}
  </update>

  <!-- 根据帖子ID更新评论状态 -->
  <update id="updateStatusByPostId">
    UPDATE comment
    SET status = #{status,jdbcType=TINYINT},
        update_time = NOW()
    WHERE post_id = #{postId,jdbcType=BIGINT}
  </update>

  <!-- 根据帖子ID删除评论 -->
  <delete id="deleteByPostId">
    DELETE FROM comment
    WHERE post_id = #{postId,jdbcType=BIGINT}
  </delete>
</mapper>