<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.edu.ujn.Forum.dao.UserMapper">
  <resultMap id="BaseResultMap" type="cn.edu.ujn.Forum.dao.User">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="verification_code" jdbcType="VARCHAR" property="verification_code" />
  </resultMap>

  <sql id="Base_Column_List">
    id, username, email, phone, password, verification_code
  </sql>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from users
    where id = #{id,jdbcType=INTEGER}
  </delete>

  <insert id="insert" parameterType="cn.edu.ujn.Forum.dao.User">
    insert into users (id, username, email,
                       phone, password, verification_code
    )
    values (#{id,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR},
            #{phone,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{verification_code,jdbcType=VARCHAR}
           )
  </insert>

  <insert id="insertSelective" parameterType="cn.edu.ujn.Forum.dao.User">
    insert into users
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="verification_code != null">
        verification_code,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="verification_code != null">
        #{verification_code,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>

  <update id="updateByPrimaryKeySelective" parameterType="cn.edu.ujn.Forum.dao.User">
    update users
    <set>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="verification_code != null">
        verification_code = #{verification_code,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>

  <update id="updateByPrimaryKey" parameterType="cn.edu.ujn.Forum.dao.User">
    update users
    set username = #{username,jdbcType=VARCHAR},
        email = #{email,jdbcType=VARCHAR},
        phone = #{phone,jdbcType=VARCHAR},
        password = #{password,jdbcType=VARCHAR},
        verification_code = #{verification_code,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <!-- 根据ID查询用户 -->
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from users
    where id = #{id,jdbcType=INTEGER}
  </select>

  <!-- 根据邮箱或手机号查询用户 -->
  <!-- 根据邮箱或手机号查询用户 -->
  <select id="selectByEmailOrPhone" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from users
    where email = #{email} OR phone = #{phone}
  </select>

  <!-- 根据手机号查询用户 -->
  <select id="selectByPhone" parameterType="string" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from users
    where phone = #{phone}
  </select>

  <!-- 根据邮箱查询用户 -->
  <select id="selectByEmail" parameterType="string" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from users
    where email = #{email}
  </select>

  <!-- 更新密码 -->
  <update id="updatePassword">
    update users
    set password = #{password}
    where id = #{id}
  </update>

  <!-- 插入新用户 -->
  <insert id="insertUser" parameterType="cn.edu.ujn.Forum.dao.User" useGeneratedKeys="true" keyProperty="id">
    insert into users (
      username, email, phone, password, verification_code
    ) VALUES (
               #{username}, #{email}, #{phone}, #{password}, #{verification_code}
             )
  </insert>

  <!-- 更新密码重置令牌 -->
  <update id="updateResetToken">
    update users
    set reset_token = #{resetToken},
        reset_token_expiration = #{resetTokenExpiration}
    where id = #{id}
  </update>
</mapper>