<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.edu.ujn.Forum.dao.UserMapper">
  <resultMap id="BaseResultMap" type="cn.edu.ujn.Forum.dao.User">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="password_hash" jdbcType="VARCHAR" property="passwordHash" />
    <result column="verification_code" jdbcType="VARCHAR" property="verificationCode" />
    <result column="is_verified" jdbcType="BIT" property="isVerified" />
    <result column="reset_token" jdbcType="VARCHAR" property="resetToken" />
    <result column="reset_token_expiration" jdbcType="TIMESTAMP" property="resetTokenExpiration" />
    <result column="created_at" jdbcType="TIMESTAMP" property="createdAt" />
    <result column="updated_at" jdbcType="TIMESTAMP" property="updatedAt" />
  </resultMap>
  <sql id="Base_Column_List">
    id, username, email, phone, password_hash, verification_code, is_verified, reset_token,
    reset_token_expiration, created_at, updated_at
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from users
    where id = #{id,jdbcType=INTEGER}
  </select>

  <select id="selectByEmailOrPhone" resultType="User">
    SELECT * FROM users
    WHERE (email = #{email} OR phone = #{phone})
    LIMIT 1;
  </select>


  <!-- 根据手机号查询用户 -->
  <select id="selectByPhone" parameterType="string" resultType="User">
    SELECT * FROM users WHERE phone = #{phone}
  </select>

  <!-- 根据邮箱查询用户 -->
  <select id="selectByEmail" parameterType="string" resultType="User">
    SELECT * FROM users WHERE email = #{email}
  </select>

  <!-- 更新密码 -->
  <update id="updatePassword" parameterType="map">
    UPDATE users SET password_hash = #{passwordHash} WHERE id = #{id}
  </update>

  <!-- 更新手机验证码 -->
  <update id="updateVerificationCode" parameterType="map">
    UPDATE users SET verification_code = #{verificationCode} WHERE phone = #{phone}
  </update>

  <!-- 更新手机验证状态 -->
  <update id="updateVerificationStatus" parameterType="map">
    UPDATE users SET is_verified = #{isVerified} WHERE phone = #{phone}
  </update>

  <!-- 根据密码重置令牌查询用户 -->
  <select id="selectByResetToken" parameterType="string" resultType="User">
    SELECT * FROM users WHERE reset_token = #{resetToken}
  </select>

  <!-- 更新密码重置令牌 -->
  <update id="updateResetToken" parameterType="map">
    UPDATE users SET reset_token = #{resetToken}, reset_token_expiration = #{resetTokenExpiration} WHERE id = #{id}
  </update>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from users
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="cn.edu.ujn.Forum.dao.User">
    insert into users (id, username, email,
    phone, password_hash, verification_code,
    is_verified, reset_token, reset_token_expiration,
    created_at, updated_at)
    values (#{id,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR},
    #{phone,jdbcType=VARCHAR}, #{passwordHash,jdbcType=VARCHAR}, #{verificationCode,jdbcType=VARCHAR},
    #{isVerified,jdbcType=BIT}, #{resetToken,jdbcType=VARCHAR}, #{resetTokenExpiration,jdbcType=TIMESTAMP},
    #{createdAt,jdbcType=TIMESTAMP}, #{updatedAt,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="cn.edu.ujn.Forum.dao.User">
    insert into users
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="passwordHash != null">
        password_hash,
      </if>
      <if test="verificationCode != null">
        verification_code,
      </if>
      <if test="isVerified != null">
        is_verified,
      </if>
      <if test="resetToken != null">
        reset_token,
      </if>
      <if test="resetTokenExpiration != null">
        reset_token_expiration,
      </if>
      <if test="createdAt != null">
        created_at,
      </if>
      <if test="updatedAt != null">
        updated_at,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="passwordHash != null">
        #{passwordHash,jdbcType=VARCHAR},
      </if>
      <if test="verificationCode != null">
        #{verificationCode,jdbcType=VARCHAR},
      </if>
      <if test="isVerified != null">
        #{isVerified,jdbcType=BIT},
      </if>
      <if test="resetToken != null">
        #{resetToken,jdbcType=VARCHAR},
      </if>
      <if test="resetTokenExpiration != null">
        #{resetTokenExpiration,jdbcType=TIMESTAMP},
      </if>
      <if test="createdAt != null">
        #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null">
        #{updatedAt,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.edu.ujn.Forum.dao.User">
    update users
    <set>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="passwordHash != null">
        password_hash = #{passwordHash,jdbcType=VARCHAR},
      </if>
      <if test="verificationCode != null">
        verification_code = #{verificationCode,jdbcType=VARCHAR},
      </if>
      <if test="isVerified != null">
        is_verified = #{isVerified,jdbcType=BIT},
      </if>
      <if test="resetToken != null">
        reset_token = #{resetToken,jdbcType=VARCHAR},
      </if>
      <if test="resetTokenExpiration != null">
        reset_token_expiration = #{resetTokenExpiration,jdbcType=TIMESTAMP},
      </if>
      <if test="createdAt != null">
        created_at = #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null">
        updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.edu.ujn.Forum.dao.User">
    update users
    set username = #{username,jdbcType=VARCHAR},
    email = #{email,jdbcType=VARCHAR},
    phone = #{phone,jdbcType=VARCHAR},
    password_hash = #{passwordHash,jdbcType=VARCHAR},
    verification_code = #{verificationCode,jdbcType=VARCHAR},
    is_verified = #{isVerified,jdbcType=BIT},
    reset_token = #{resetToken,jdbcType=VARCHAR},
    reset_token_expiration = #{resetTokenExpiration,jdbcType=TIMESTAMP},
    created_at = #{createdAt,jdbcType=TIMESTAMP},
    updated_at = #{updatedAt,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>