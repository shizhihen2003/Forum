<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.edu.ujn.Forum.dao.PostMapper">
  <!-- 基础帖子映射 -->
  <resultMap id="BaseResultMap" type="cn.edu.ujn.Forum.dao.Post">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="category_id" jdbcType="BIGINT" property="categoryId" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="summary" jdbcType="VARCHAR" property="summary" />
    <result column="view_count" jdbcType="INTEGER" property="viewCount" />
    <result column="like_count" jdbcType="INTEGER" property="likeCount" />
    <result column="comment_count" jdbcType="INTEGER" property="commentCount" />
    <result column="is_top" jdbcType="INTEGER" property="isTop" />
    <result column="is_essence" jdbcType="INTEGER" property="isEssence" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
  </resultMap>

  <!-- 带作者和分类的帖子映射 -->
  <resultMap id="PostWithAuthorMap" type="cn.edu.ujn.Forum.dao.Post" extends="BaseResultMap">
    <!-- 作者信息,包含profile关联 -->
    <association property="author" javaType="cn.edu.ujn.Forum.dao.User">
      <id column="user_id" property="id"/>
      <result column="username" property="username"/>
      <result column="email" property="email"/>
      <result column="phone" property="phone"/>
      <!-- Profile关联 -->
      <association property="profile" javaType="cn.edu.ujn.Forum.dao.UserProfile">
        <id column="user_id" property="userId"/>
        <result column="avatar" property="avatar"/>
        <result column="nickname" property="nickname"/>
        <result column="bio" property="bio"/>
        <result column="location" property="location"/>
        <result column="birthday" property="birthday"/>
        <result column="gender" property="gender"/>
      </association>
    </association>

    <!-- 分类关联 -->
    <association property="category" javaType="cn.edu.ujn.Forum.dao.Category">
      <id column="category_id" property="id"/>
      <result column="category_name" property="name"/>
      <result column="category_description" property="description"/>
    </association>
  </resultMap>

  <!-- 基础列 -->
  <sql id="Base_Column_List">
    p.id, p.category_id, p.user_id, p.title, p.summary, p.view_count,
        p.like_count, p.comment_count, p.is_top, p.is_essence, p.status,
        p.create_time, p.update_time, p.content
  </sql>

  <!-- SQL查询语句更新,包含所有需要的字段 -->
  <sql id="With_Association_Column_List">
    p.id, p.category_id, p.user_id, p.title, p.summary, p.view_count,
    p.like_count, p.comment_count, p.is_top, p.is_essence, p.status,
    p.create_time, p.update_time, p.content,
    u.username, u.email, u.phone,
    up.avatar, up.nickname, up.bio, up.location, up.birthday, up.gender,
    c.name as category_name, c.description as category_description
  </sql>
  <!-- 根据ID查询帖子 -->
  <select id="selectById" parameterType="java.lang.Long" resultMap="PostWithAuthorMap">
    SELECT
    <include refid="With_Association_Column_List" />
    FROM post p
    LEFT JOIN user u ON p.user_id = u.id
    LEFT JOIN user_profile up ON u.id = up.user_id
    LEFT JOIN category c ON p.category_id = c.id
    WHERE p.id = #{id}
  </select>

  <!-- 查询帖子列表 -->
  <select id="selectList" parameterType="cn.edu.ujn.Forum.util.PostQuery" resultMap="PostWithAuthorMap">
    SELECT
    <include refid="With_Association_Column_List" />
    FROM post p
    LEFT JOIN user u ON p.user_id = u.id
    LEFT JOIN user_profile up ON u.id = up.user_id
    LEFT JOIN category c ON p.category_id = c.id
    <where>
      p.status != 3
      <if test="categoryId != null">
        AND p.category_id = #{categoryId}
      </if>
      <if test="userId != null">
        AND p.user_id = #{userId}
      </if>
      <if test="status != null">
        AND p.status = #{status}
      </if>
      <if test="excludeId != null">
        AND p.id != #{excludeId}
      </if>
      <if test="keyword != null and keyword != ''">
        AND (p.title LIKE CONCAT('%',#{keyword},'%')
        OR p.content LIKE CONCAT('%',#{keyword},'%'))
      </if>
    </where>
    <choose>
      <when test="orderBy != null and orderBy != ''">
        ORDER BY p.is_top DESC, ${orderBy}
      </when>
      <otherwise>
        ORDER BY p.is_top DESC, p.create_time DESC
      </otherwise>
    </choose>
    <if test="offset != null and limit != null">
      LIMIT #{offset}, #{limit}
    </if>
  </select>

  <!-- 统计帖子总数 -->
  <select id="countList" parameterType="cn.edu.ujn.Forum.util.PostQuery" resultType="java.lang.Integer">
    SELECT COUNT(*)
    FROM post p
    <where>
      p.status != 3
      <if test="categoryId != null">
        AND p.category_id = #{categoryId}
      </if>
      <if test="userId != null">
        AND p.user_id = #{userId}
      </if>
      <if test="status != null">
        AND p.status = #{status}
      </if>
      <if test="keyword != null and keyword != ''">
        AND (p.title LIKE CONCAT('%',#{keyword},'%')
        OR p.content LIKE CONCAT('%',#{keyword},'%'))
      </if>
    </where>
  </select>

  <!-- 查询热门帖子 -->
  <select id="selectHotPosts" resultMap="PostWithAuthorMap">
    SELECT
    <include refid="With_Association_Column_List" />
    FROM post p
    LEFT JOIN user u ON p.user_id = u.id
    LEFT JOIN user_profile up ON u.id = up.user_id
    LEFT JOIN category c ON p.category_id = c.id
    WHERE p.status = 1
    ORDER BY p.view_count DESC, p.like_count DESC, p.comment_count DESC
    LIMIT #{limit}
  </select>

  <!-- 查询相关帖子 -->
  <select id="selectRelatedPosts" resultMap="BaseResultMap">
    SELECT
    <include refid="With_Association_Column_List" />
    FROM post p
    LEFT JOIN user u ON p.user_id = u.id
    LEFT JOIN user_profile up ON u.id = up.user_id
    LEFT JOIN category c ON p.category_id = c.id
    WHERE p.category_id = #{categoryId}
    AND p.id != #{currentId}
    AND p.status = 1
    ORDER BY p.create_time DESC, p.view_count DESC
    LIMIT #{limit}
  </select>

  <!-- 插入帖子 -->
  <insert id="insert" parameterType="cn.edu.ujn.Forum.dao.Post" useGeneratedKeys="true" keyProperty="id">
    INSERT INTO post (
      category_id, user_id, title, summary, view_count,
      like_count, comment_count, status, is_top, is_essence,
      create_time, update_time, content
    )
    VALUES (
             #{categoryId}, #{userId}, #{title}, #{summary}, #{viewCount},
             #{likeCount}, #{commentCount}, #{status}, #{isTop}, #{isEssence},
             #{createTime}, #{updateTime}, #{content}
           )
  </insert>

  <!-- 更新帖子 -->
  <update id="update" parameterType="cn.edu.ujn.Forum.dao.Post">
    UPDATE post
    <set>
      <if test="categoryId != null">category_id = #{categoryId},</if>
      <if test="title != null">title = #{title},</if>
      <if test="summary != null">summary = #{summary},</if>
      <if test="content != null">content = #{content},</if>
      <if test="status != null">status = #{status},</if>
      <if test="isTop != null">is_top = #{isTop},</if>
      <if test="isEssence != null">is_essence = #{isEssence},</if>
      update_time = #{updateTime}
    </set>
    WHERE id = #{id}
  </update>

  <!-- 更新帖子状态 -->
  <update id="updateStatus">
    UPDATE post
    SET status = #{status}, update_time = NOW()
    WHERE id = #{id}
  </update>

  <!-- 增加浏览次数 -->
  <update id="increaseViewCount">
    UPDATE post
    SET view_count = view_count + 1
    WHERE id = #{id}
  </update>

  <!-- 更新点赞次数 -->
  <update id="updateLikeCount">
    UPDATE post
    SET like_count = like_count + #{delta}
    WHERE id = #{id}
  </update>

  <!-- 更新评论次数 -->
  <update id="updateCommentCount">
    UPDATE post
    SET comment_count = comment_count + #{delta}
    WHERE id = #{id}
  </update>

  <!-- 更新置顶状态 -->
  <update id="updateTopStatus">
    UPDATE post
    SET is_top = #{isTop}, update_time = NOW()
    WHERE id = #{id}
  </update>

  <!-- 更新精华状态 -->
  <update id="updateEssenceStatus">
    UPDATE post
    SET is_essence = #{isEssence}, update_time = NOW()
    WHERE id = #{id}
  </update>

  <!-- 批量更新状态 -->
  <update id="batchUpdateStatus">
    UPDATE post
    SET status = #{status}, update_time = NOW()
    WHERE id IN
    <foreach collection="ids" item="id" open="(" separator="," close=")">
      #{id}
    </foreach>
  </update>

  <!-- 物理删除帖子 -->
  <delete id="deleteById">
    DELETE FROM post WHERE id = #{id}
  </delete>

  <!-- 批量删除帖子 -->
  <delete id="batchDelete">
    DELETE FROM post
    WHERE id IN
    <foreach collection="ids" item="id" open="(" separator="," close=")">
      #{id}
    </foreach>
  </delete>
</mapper>